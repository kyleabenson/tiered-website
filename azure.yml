---
- name: Setup Azure Infra
  hosts: localhost
  vars_files:
    - config.yml

  tasks:
    - name: Setup Resource Group in Azure
      azure_rm_resourcegroup:
        name: "{{ azure_resource_group }}"
        location: eastus

    - name: Create Public Ip Address for LB
      azure_rm_publicipaddress:
        resource_group: "{{ azure_resource_group }}"
        name: myPublicIP
        allocation_method: static
        sku: Standard

    - name: Create Load Balancer
      azure_rm_loadbalancer:
        resource_group: "{{ azure_resource_group }}"
        name: myLoadBalancer
        sku: Standard
        backend_address_pools:
         - name: myBackendPool
        frontend_ip_configurations:
         - name: myFrontEnd
           public_ip_address: myPublicIP
           private_ip_allocation_method: Dynamic
        probes:
         - name: myHealthProbe
           port: 80
           protocol: Tcp
           fail_count: 2
        load_balancing_rules:
          - name: myHTTPRule
            frontend_ip_configuration: myFrontEnd
            backend_address_pool: myBackendPool
            frontend_port: 80
            backend_port: 80
            protocol: Tcp
            probe: myHealthProbe

    - name: Create a virtual network
      azure_rm_virtualnetwork:
        resource_group: "{{ azure_resource_group }}"
        name: myVnet
        address_prefixes_cidr: "10.0.0.0/16"

    - name: Create a subnet
      azure_rm_subnet:
        resource_group: "{{ azure_resource_group }}"
        virtual_network_name: myVnet
        name: mySubnet
        address_prefix_cidr: "10.0.0.0/24"

    - name: Create security group
      azure_rm_securitygroup:
        resource_group: "{{ azure_resource_group }}"
        name: myNetworkSecurityGroup
        rules:
            - name: 'myNetworkSecurityGroupRuleHTTP'
              protocol: Tcp
              destination_port_range: 80
              access: Allow
              priority: 200

    - name: Create virtual nics for LB backend hosts
      azure_rm_networkinterface:
        name: "nic{{item}}"
        resource_group: "{{ azure_resource_group }}"
        virtual_network: myVnet
        subnet_name: mySubnet
        security_group: myNetworkSecurityGroup
        ip_configurations:
          - name: ipconfig1
            primary: True
            load_balancer_backend_address_pools:
              - name: MyBackendPool
                load_balancer: myLoadBalancer
      with_items:
       - 1
       - 2
       - 3

    - name: Create Presentation Layer VM
      azure_rm_virtualmachine:
        resource_group: "{{ azure_resource_group }}"
        name: "backingVM{{item}}"
        public_ip_allocation_method: Disabled
        network_interfaces: "nic{{item}}"
        admin_username: "{{ admin_user }}"
        vm_size: Standard_DS1_v2
        open_ports: 
         - 80
         - 22
        ssh_password_enabled: false
        ssh_public_keys:
          - path: "/home/{{ admin_user }}/.ssh/authorized_keys"
            key_data: "{{ssh_pub_key}}"
        image:
            offer: "{{ azure_image_details.offer }}"
            publisher: "{{ azure_image_details.publisher }}"
            sku: "{{ azure_image_details.sku }}"
            version: "{{ azure_image_details.version }}"
        custom_data: "{{ lookup('file', 'cloud-init.txt') }}"
      with_items:
       - 1
       - 2
       - 3

    - name: Create Public Ip Address for Jump Host
      azure_rm_publicipaddress:
        resource_group: "{{ azure_resource_group }}"
        name: jumphostip
        allocation_method: static

    - name: Create a Jump Host
      azure_rm_virtualmachine:
        resource_group: "{{ azure_resource_group }}"
        name: jumpVM
        admin_username: "{{ admin_user }}"
        public_ip_allocation_method: Static
        vm_size: Standard_DS1_v2
        ssh_password_enabled: false
        ssh_public_keys:
          - path: "/home/{{ admin_user }}/.ssh/authorized_keys"
            key_data: "{{ssh_pub_key}}"
        image:
            offer: "{{ azure_image_details.offer }}"
            publisher: "{{ azure_image_details.publisher }}"
            sku: "{{ azure_image_details.sku }}"
            version: "{{ azure_image_details.version }}"

    - name: Create Application Layer VM
      azure_rm_virtualmachine:
        resource_group: "{{ azure_resource_group }}"
        name: appLayerVm
        public_ip_allocation_method: Disabled
        admin_username: "{{ admin_user }}"
        vm_size: Standard_DS1_v2
        ssh_password_enabled: false
        ssh_public_keys:
          - path: "/home/{{ admin_user }}/.ssh/authorized_keys"
            key_data: "{{ssh_pub_key}}"
        image:
            offer: "{{ azure_image_details.offer }}"
            publisher: "{{ azure_image_details.publisher }}"
            sku: "{{ azure_image_details.sku }}"
            version: "{{ azure_image_details.version }}"

    - name: Create Database Layer MySQL Server 
      azure_rm_mysqlserver:
        resource_group: "{{ azure_resource_group }}"
        name: "{{ azure_sql_server_name }}"
        sku:
          name: B_Gen5_1
          tier: Basic
        location: "{{ azure_location    }}"
        storage_mb: 5120
        enforce_ssl: True
        version: 5.7
        admin_username: "{{ admin_user }}"
        admin_password: "{{ admin_pass }}"

    - name: Create (or update) Firewall Rule
      azure_rm_mysqlfirewallrule:
          resource_group: "{{ azure_resource_group }}"
          server_name: "{{ azure_sql_server_name }}"
          name: firewallrulecrudtest-5370
          start_ip_address: 0.0.0.0
          end_ip_address: 255.255.255.255
