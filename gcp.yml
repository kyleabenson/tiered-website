---
- name: Setup GCP Infra
  hosts: localhost
  vars_files: 
    - config.yml
  
  tasks:

    - name: Create a Network
      google.cloud.gcp_compute_network:
        name: network-instance
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: "{{ desired_state }}"
      register: network

    - name: Create a Firewall
      google.cloud.gcp_compute_firewall:
        name: "{{ gcp_instance_group_name}}-firewall"
        network: "{{ network }}"
        allowed:
        - ip_protocol: tcp
          ports:
          - '22'
        target_tags:
        - jump
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: "{{ desired_state }}"
        
    - name: Create an Address
      google.cloud.gcp_compute_address:
        name: jump-address
        region: "{{ gcp_region }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: "{{ desired_state }}"
      register: address

    - name: Create a Jump Host
      google.cloud.gcp_compute_instance:
        name: jumphost
        machine_type: f1-micro
        disks:
        - auto_delete: 'true'
          boot: 'true'
          device_name: device1
          initialize_params:
            disk_size_gb: "{{ disk_size_gb }}"
            source_image: "{{ gcp_source_image }}"
        network_interfaces:
        - network: "{{ network }}"  
          access_configs:
          - name: External NAT
            nat_ip: "{{ address }}"
            type: ONE_TO_ONE_NAT
        metadata:
          ssh-keys: "{{admin_user}}:{{ ssh_pub_key }}" 
        tags:
          items:
           - jump
        zone: "{{ gcp_zone }}"
        auth_kind: "{{ gcp_cred_kind }}"
        project: "{{ gcp_project }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: "{{ desired_state }}"

    - name: Create A Instance Template
      google.cloud.gcp_compute_instance_template:
        name: simple-frontend
        properties:
            machine_type: f1-micro
            disks:
            - auto_delete: 'true'
              boot: 'true'
              device_name: device1
              initialize_params:
                disk_size_gb: "{{ disk_size_gb }}"
                source_image: "{{ gcp_source_image }}"
            network_interfaces:
            - network: "{{ network }}"  
            metadata:
              ssh-keys: "{{admin_user}}:{{ ssh_pub_key }}" 
        auth_kind: "{{ gcp_cred_kind }}"
        project: "{{ gcp_project }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: "{{ desired_state }}"
      register: instancetemplate

    - name: Create an Instance Group Manager
      google.cloud.gcp_compute_instance_group_manager:
        name: "{{gcp_instance_group_name}}"
        base_instance_name: test1-child
        instance_template: "{{ instancetemplate }}"
        target_size: 3
        zone: "{{ gcp_zone }}"
        auth_kind: "{{ gcp_cred_kind }}"
        project: "{{ gcp_project }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: "{{ desired_state }}"
      register: igm
      ignore_errors: true
    
    - name: Get Instance Group Info
      google.cloud.gcp_compute_instance_group_info:
        filters:
          - name = "{{ gcp_instance_group_name }}"
        zone: "{{ gcp_zone }}"
        auth_kind: "{{ gcp_cred_kind }}"
        project: "{{ gcp_project }}"
        service_account_file: "{{ gcp_cred_file }}"
      register: iginfo
      when: desired_state == 'present'
    
    - set_fact:
        gcp_http_lb_backend: "{{ iginfo.resources | first }}"
      when: desired_state == 'present'
    
    - set_fact:
        gcp_http_lb_state: absent
      when: desired_state == 'absent'
    
    - name: Create an Autoscaler
      google.cloud.gcp_compute_autoscaler:
        name: simple-frontend-scaler
        target: "{{ igm }}"
        autoscaling_policy:
            max_num_replicas: 5
            min_num_replicas: 1
            cool_down_period_sec: 60
            cpu_utilization:
                utilization_target: 0.75
        zone: "{{ gcp_zone }}"
        auth_kind: "{{ gcp_cred_kind }}"
        project: "{{ gcp_project }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: "{{ desired_state }}"     

    - name: Create a Load Balancer
      import_role:
        name: google.cloud.gcp_http_lb

    - name: Create Business Layer Host
      google.cloud.gcp_compute_instance:
        name: bizlayer
        machine_type: f1-micro
        disks:
        - auto_delete: 'true'
          boot: 'true'
          device_name: device1
          initialize_params:
            disk_size_gb: "{{ disk_size_gb }}"
            source_image: "{{ gcp_source_image }}"
        network_interfaces:
        - network: "{{ network }}"
        metadata:
          ssh-keys: "{{admin_user}}:{{ ssh_pub_key }}" 
        zone: "{{ gcp_zone }}"
        auth_kind: "{{ gcp_cred_kind }}"
        project: "{{ gcp_project }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: "{{ desired_state }}"

    - name: Create a MySQL Instance
      google.cloud.gcp_sql_instance:
        name: "{{ db_name }}-{{ 10000000000 | random }}"
        database_version: MYSQL_5_7
        settings:
          tier: db-n1-standard-1
        region: "{{ gcp_region }}"
        auth_kind: "{{ gcp_cred_kind }}"
        project: "{{ gcp_project }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: "{{ desired_state }}"  
      register: instance

    - name: Create a Database User
      google.cloud.gcp_sql_user:
        name: "{{ admin_user}}"
        password: "{{ admin_password }}"
        instance: "{{ instance }}"
        host: "%"
        auth_kind: "{{ gcp_cred_kind }}"
        project: "{{ gcp_project }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: "{{ desired_state }}"

    - name: Create a Database
      google.cloud.gcp_sql_database:
        name: "{{ instance.name }}-db-{{100000 | random }}"
        charset: utf8
        instance: "{{ instance.name }}"
        auth_kind: "{{ gcp_cred_kind }}"
        project: "{{ gcp_project }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: "{{ desired_state }}"